FROM crs4/hadoop:3

#FROM hd311
# LABEL maintainer="gianluigi.zanetti@crs4.it"

RUN yum install https://centos7.iuscommunity.org/ius-release.rpm

# Copied from crs4/python-client, probably an overkill

RUN yum install \
      gcc \
      gcc-c++ \
      git \
      make \
      openssl-devel \
      python36u-devel \
      python36u-pip \
      unzip \
      wget \
      which \
      zip && \
    yum clean all && \
    ln -rs /usr/bin/python3.6 /usr/bin/python3 && \
    ln -rs /usr/bin/pip3.6 /usr/bin/pip3 && \
    /usr/bin/pip3 install --no-cache-dir --upgrade pip && \
    /usr/bin/pip3 install --no-cache-dir --upgrade setuptools


RUN wget https://cmake.org/files/v3.3/cmake-3.3.2-Linux-x86_64.tar.gz && \
    tar xvf cmake-3.3.2-Linux-x86_64.tar.gz   && \
    cp -R cmake-3.3.2-Linux-x86_64/bin /usr/  && \
    cp -R cmake-3.3.2-Linux-x86_64/doc /usr/  && \   
    cp -R cmake-3.3.2-Linux-x86_64/man /usr/  && \    
    cp -R cmake-3.3.2-Linux-x86_64/share /usr/  && \
    rm cmake-3.3.2-Linux-x86_64.tar.gz  && \
    rm -rf cmake-3.3.2-Linux-x86_64

RUN git clone https://github.com/TileDB-Inc/TileDB.git && \
    cd TileDB && \
    git checkout backport-1.4.2 && \        
    mkdir build && \
    cd build && \
    ../bootstrap --prefix=/usr --enable-hdfs --enable-verbose && \
    make  && \
    make install-tiledb && \
    cd ..

RUN git clone https://github.com/TileDB-Inc/TileDB-Py.git && \
    cd TileDB-Py && \
    git checkout dev && \
    pip3 install --no-cache-dir -r requirements_dev.txt && \
    python3 setup.py build_ext --inplace && \
    python3 setup.py install && \
    cd ..

RUN wget http://download.osgeo.org/gdal/CURRENT/gdal-2.4.0.tar.gz && \
    zcat gdal-2.4.0.tar.gz | tar xvf - && \
    cd gdal-2.4.0 && ./configure && make && make install && \
    pip3 install --no-cache-dir gdal && \
    echo "/usr/local/lib" > /etc/ld.so.conf.d/libgdal-x86_64.conf && \
    ldconfig


RUN pip3 install --no-cache-dir jupyter

RUN pip3 install --no-cache-dir xarray

RUN pip3 install --no-cache-dir psycopg2

RUN yum install proj && \
    ln -s /usr/lib64/libproj.so.0 /usr/lib64/libproj.so

RUN pip3 install --no-cache-dir  pyproj

RUN pip3 install --no-cache-dir  folium

RUN CLASSPATH=`/opt/hadoop/bin/hadoop classpath --glob` && \
    echo "export CLASSPATH=\"${CLASSPATH}\"" >> /etc/profile.d/hadoop.sh && \
    echo "export HADOOP_HOME=/opt/hadoop" >> /etc/profile.d/hadoop.sh && \
    echo  /usr/lib/jvm/jre/lib/amd64/server > /etc/ld.so.conf.d/jvm.conf && \
    ldconfig


RUN useradd -m jupyter

COPY core-site.xml /opt/hadoop/etc/hadoop/core-site.xml

WORKDIR /home/jupyter
USER jupyter
RUN mkdir .jupyter notebooks
COPY --chown=jupyter jupyter_notebook_config.py .jupyter/

WORKDIR notebooks

EXPOSE 8888
ENTRYPOINT ["/bin/bash", "-l", "-c", "jupyter notebook"]
